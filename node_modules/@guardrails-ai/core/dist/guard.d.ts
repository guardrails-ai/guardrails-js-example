import { Validator } from './validators.js';
import { Dictionary, FromRailOptions, FromStringOptions, ParseOptions } from './types.js';
import { ValidationOutcome } from './outputs/validation-outcome.js';
import { Call } from './history/call.js';
import { Stack } from './structs/stack.js';
export declare class Guard<T> {
    private pyGuard;
    private _history;
    constructor(pyGuard: any);
    static fromRail(railFile: string, opts?: FromRailOptions): Promise<Guard<string | Dictionary>>;
    static fromRailString(railString: string, opts?: FromRailOptions): Promise<Guard<string | Dictionary>>;
    static fromString(validators: Validator[], opts?: FromStringOptions): Promise<Guard<string>>;
    parse(llmOutput: string, opts?: ParseOptions): Promise<ValidationOutcome<T>>;
    private cloneProperties;
    private cloneHistory;
    get history(): Stack<Call<T>>;
}
//# sourceMappingURL=guard.d.ts.map