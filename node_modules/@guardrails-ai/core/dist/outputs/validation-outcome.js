import { determine } from '../utils/determine.js';
export class ValidationOutcome {
    rawLlmOutput;
    validatedOutput;
    reask;
    validationPassed;
    error;
    constructor(validationPassed, rawLlmOutput, validatedOutput, reask, error) {
        this.rawLlmOutput = rawLlmOutput;
        this.validatedOutput = validatedOutput;
        this.reask = reask;
        this.validationPassed = validationPassed;
        this.error = error;
    }
    static async fromPyValidationOutcome(pyValidationOutcome) {
        let rawLlmOutput, validatedOutput, reask, validationPassed, error;
        try {
            rawLlmOutput = await pyValidationOutcome.raw_llm_output;
            validatedOutput = await determine(pyValidationOutcome.validated_output);
            reask = await determine(pyValidationOutcome.reask);
            validationPassed = await pyValidationOutcome.validation_passed;
            error = await pyValidationOutcome.error;
        }
        catch (err) {
            console.error('An error occurred while parsing a ValidationOutcome from python to javascript.', err);
        }
        return new ValidationOutcome(validationPassed, rawLlmOutput, validatedOutput, reask, error);
    }
}
